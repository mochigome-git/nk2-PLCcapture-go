# Stage 1: Build the Go programs
FROM golang:1.20-alpine AS build
WORKDIR /opt/nk2PLCcapture

# Copy the project files and build each program
COPY . .
RUN apk --no-cache add gcc musl-dev
RUN cd 2bit && \
    CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main2bit main.2bit.go
RUN cd 16bit && \
    CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main16bit main.16bit.go
RUN cd 32bit && \
    CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main32bit main.32bit.go

# Stage 2: Copy the built Go programs into a minimal container
FROM alpine:3.14
RUN apk --no-cache add ca-certificates
WORKDIR /app
COPY --from=build /opt/nk2PLCcapture/2bit/main2bit /app/
COPY --from=build /opt/nk2PLCcapture/16bit/main16bit /app/
COPY --from=build /opt/nk2PLCcapture/32bit/main32bit /app/
COPY 2bit/.env.local /app/.env.local
COPY 2bit/.env.local /app/.env.local.16
COPY 2bit/.env.local /app/.env.local.32

RUN chmod +x /app/main2bit
RUN chmod +x /app/main16bit
RUN chmod +x /app/main32bit

CMD ["/app/main2bit","/app/main16bit","/app/main32bit"]
